<h2>Your Clients!</h2>

<form id="new-client_form" data-user_id="<%= current_user.id %>">
  <fieldset>
    <legend>New CLIENT:</legend>

    <label for="new-client_name">Name</label>
    <input type="text" id="new-client_name" minlength="3" maxlength="22" required><br/><br/>

    <label for="new-client_gender">Gender</label>
    <select id="new-client_gender" value="Male">
      <option value="Male">Male</option>
      <option value="Male">Female</option>
    </select><br/><br/>

    <label for="new-client_height">Height</label>
    <input type="number" id="new-client_height" min="60" max="300" required><br/><br/>

    <label for="new-client_weight">Weight</label>
    <input type="number" id="new-client_weight" min="60" max="300" required><br/><br/>

    <label for="new-client_age">Age</label>
    <input type="number" id="new-client_age" min="8" max="100" required><br/><br/>

    <button id="new-client_create">Submitted</button>
  </fieldset>
</form>

<div id='schedulesContainer' style='border: 2px solid #666; padding: 12px; margin: 6px 0'>
  <h1>Schedules:</h1>
</div>
<div id='clientContainer' data-user_id="<%= current_user.id %>" style='border: 1px solid #666; padding: 12px'>
</div>
<button id="sort_button">Sort</button>

<script>
const sortButton = document.getElementById('sort_button');
sortButton.addEventListener('click', sorting);

function sorting(){
  const clientsContainer = document.getElementById('clientContainer');
  const listOfElements = [...clientsContainer.children].sort((a, b) => a.textContent.localeCompare(b.textContent));

 clientsContainer.innerHTML = '';

 listOfElements.forEach(client => clientsContainer.appendChild(client))
}
</script>

<script>
  (function(){
    const createBt = document.getElementById('new-client_create');


    const checkStatus = response =>
      (response.status === 200)
      ? Promise.resolve(response)
      : Promise.reject(new Error(response.statusText));

    const handleError = err => {
      console.error(err);
      alert('Has some issues to handle your request.');
    };

    const handleCreate = event => {
      console.log('Client has been born');
      const clientForm = document.getElementById('new-client_form');
      if (!clientForm.checkValidity()) return;
      event.preventDefault(); //prevent send request to the server

      const data = {
        name: document.getElementById('new-client_name').value,
        gender: document.getElementById('new-client_gender').value,
        height: Number(document.getElementById('new-client_height').value),
        weight: Number(document.getElementById('new-client_weight').value),
        age: Number(document.getElementById('new-client_age').value),
      };
    const userId = clientForm.dataset.user_id;
    const options = {
      method: 'POST',
      body: JSON.stringify(data),
      headers: {
        'Content-Type': 'application/json'
      },
    };

      fetch(`http://localhost:3000/users/${userId}/clients`, options)
      .then(checkStatus)
      .then(res => res.json())
      .then(client => {
        const {id, name, gender, age, weight, height, schedules, user} = client;

        new Client(id, name, gender, age, weight, height, schedules, user);
        clientForm.reset();
        })
      .catch(handleError);
    };

    createBt.addEventListener('click', handleCreate);
  })()
</script>

<script>
  (function(){
    const userID = document.getElementById('clientContainer').dataset.user_id;
    const schedulesContainer = document.getElementById('schedulesContainer');

    const checkStatus = response =>
      (response.status === 200)
      ? Promise.resolve(response)
      : Promise.reject(new Error(response.statusText));

    const handleError = err => {
      console.error(err);
      alert('Has some issues to handle your request.');
    };

    fetch(`http://localhost:3000/users/${userID}/clients.json`)
    .then(checkStatus)
    .then(res => res.json())
    .then(data => {

      // Render Schedules list
      //[x]Your Rails application must reveal at least one `has-many` relationship through JSON that is then rendered to the page.
console.log(data);

if (data.length) {

      data[0].schedules.forEach(schedule => {
        schedulesContainer.innerHTML += `
          <h3> ${schedule.date_day} <sup>${schedule.exercise_type}</sup> </h3>
        `
      });
    }

      // Render Client list
      //[x]Must render at least one index page (index resource - 'list of things') via JavaScript and an Active Model Serialization JSON Backend.

      data.forEach(client => {
        const {id, name, gender, age, weight, height, schedules, user} = client;
        new Client(id, name, gender, age, weight, height, schedules, user);
      })
    })
    .catch(handleError);
  })()
</script>
